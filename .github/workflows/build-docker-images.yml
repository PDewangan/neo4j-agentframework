name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    paths:
      - 'scripts/Dockerfile.*'
      - 'Dockerfile.*'
      - 'neo4j-rag-demo/streamlit_app/Dockerfile'
      - '.github/workflows/build-docker-images.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'scripts/Dockerfile.*'
      - 'Dockerfile.*'
      - 'neo4j-rag-demo/streamlit_app/Dockerfile'
  workflow_dispatch:
    inputs:
      push_images:
        description: 'Push images to registry'
        required: false
        default: 'true'
        type: boolean

env:
  REGISTRY: ghcr.io
  REGISTRY_NAMESPACE: ghcr.io/ma3u/ms-agentf-neo4j

jobs:
  build-bitnet-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        image:
          - name: bitnet-final
            dockerfile: scripts/Dockerfile.bitnet-final
            context: scripts
            description: "BitNet.cpp with real 1.58-bit quantized inference (3.2GB)"
          - name: bitnet-optimized
            dockerfile: scripts/Dockerfile.bitnet-optimized
            context: scripts
            description: "Size-optimized BitNet.cpp container (1.4GB)"
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_NAMESPACE }}/${{ matrix.image.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{date 'YYYYMMDD'}},enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=BitNet RAG ${{ matrix.image.name }}
            org.opencontainers.image.description=${{ matrix.image.description }}
            org.opencontainers.image.url=https://github.com/ma3u/ms-agentf-neo4j
            org.opencontainers.image.documentation=https://github.com/ma3u/ms-agentf-neo4j/blob/main/docs/BITNET-SUCCESS.md

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.image.context }}
          file: ${{ matrix.image.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' && (github.event.inputs.push_images != 'false') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=image,name=${{ env.REGISTRY_NAMESPACE }}/${{ matrix.image.name }},push=${{ github.event_name != 'pull_request' && (github.event.inputs.push_images != 'false') }}

  build-service-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        image:
          - name: rag-service
            dockerfile: Dockerfile.optimized
            context: .
            description: "Ultra-high-performance RAG service with 417x faster vector search"
          - name: streamlit-chat
            dockerfile: neo4j-rag-demo/streamlit_app/Dockerfile
            context: neo4j-rag-demo/streamlit_app
            description: "Interactive Streamlit chat UI for Neo4j RAG"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_NAMESPACE }}/${{ matrix.image.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{date 'YYYYMMDD'}},enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=Neo4j RAG ${{ matrix.image.name }}
            org.opencontainers.image.description=${{ matrix.image.description }}
            org.opencontainers.image.url=https://github.com/ma3u/ms-agentf-neo4j
            org.opencontainers.image.documentation=https://github.com/ma3u/ms-agentf-neo4j/blob/main/README.md

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.image.context }}
          file: ${{ matrix.image.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' && (github.event.inputs.push_images != 'false') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-documentation:
    runs-on: ubuntu-latest
    needs: [build-bitnet-images, build-service-images]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update container sizes in documentation
        run: |
          # Get current date for image tags
          DATE_TAG=$(date +%Y%m%d)
          
          # Create a summary of built images
          cat << EOF > container-registry-update.md
          # Container Images Updated - $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          
          ## 🐳 Available Images
          
          All images are available at: \`ghcr.io/ma3u/ms-agentf-neo4j/\`
          
          ### BitNet Images
          - \`bitnet-final:latest\` - Full BitNet.cpp with real 1.58-bit quantized inference
          - \`bitnet-optimized:latest\` - Size-optimized BitNet.cpp container
          
          ### Service Images  
          - \`rag-service:latest\` - Ultra-high-performance RAG service
          - \`streamlit-chat:latest\` - Interactive Streamlit chat UI
          
          ## 🚀 Quick Start
          \`\`\`bash
          # Pull all images
          docker pull ghcr.io/ma3u/ms-agentf-neo4j/bitnet-final:latest
          docker pull ghcr.io/ma3u/ms-agentf-neo4j/rag-service:latest
          docker pull ghcr.io/ma3u/ms-agentf-neo4j/streamlit-chat:latest
          
          # Start with pre-built images
          docker-compose -f scripts/docker-compose.ghcr.yml up -d
          \`\`\`
          
          Built from commit: \`${{ github.sha }}\`
          EOF
          
          echo "Generated container registry update documentation"

      - name: Commit documentation updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if [[ -n $(git status --porcelain) ]]; then
            git add -A
            git commit -m "docs: update container registry information [skip ci]" || exit 0
            git push
          else
            echo "No documentation changes to commit"
          fi

  create-release-notes:
    runs-on: ubuntu-latest
    needs: [build-bitnet-images, build-service-images]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Create Release Summary
        run: |
          echo "## 🎉 Container Images Built Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Available Images:" >> $GITHUB_STEP_SUMMARY
          echo "- \`ghcr.io/ma3u/ms-agentf-neo4j/bitnet-final:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`ghcr.io/ma3u/ms-agentf-neo4j/bitnet-optimized:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`ghcr.io/ma3u/ms-agentf-neo4j/rag-service:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`ghcr.io/ma3u/ms-agentf-neo4j/streamlit-chat:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Quick Start:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "docker-compose -f scripts/docker-compose.ghcr.yml up -d" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Registry:" >> $GITHUB_STEP_SUMMARY
          echo "https://github.com/ma3u/ms-agentf-neo4j/pkgs/container/ms-agentf-neo4j%2Fbitnet-final" >> $GITHUB_STEP_SUMMARY